{
	"LoginShibboleth":
	{
		"PluginDescription": "Login plugin which Shibboleth Authentication. Provide an a way to login with shibboleth/ldap to Piwik.",
		"LoginPluginEnabledWarning": "Piwik default Login plug in is active.",
		"Settings": "LoginShibboleth Settings",
		"ActivateLdap": "Activate LDAP",
		"ActivateLdapDesc": "Activates using LDAP as extra Information Plugin",
		"ShibbolethUserLogin": "Shibboleth User Login Key",
		"ShibbolethUserLoginDesc": "Shibboleth uid or login string in server header ($_SERVER)",
		"ShibbolethUserAlias": "Shibboleth User Alias Key",
		"ShibbolethUserAliasDesc": "Shibboleth alias string in server header. ($_SERVER)",
		"ShibbolethUserEmail": "Shibboleth User Email Key",
		"ShibbolethUserEmailDesc": "Shibboleth email string in server header. ($_SERVER)",
		"ShibbolethViewGroup": "Comma separated view groups",
		"ShibbolethViewGroupDesc": "To restrict access to Piwik back-end interface, this option can be used.There are two capabilities built into this option.First: The general view access of the User can beset with this group(USER-PIWIK-VIEW), it gives another layer of security for user access management.Setting this option to a existing shibboleth group will result in users only within the group and super user to login. It will work if the restrict view access is on. Second: Using a reg - ex pattern which contains parentheses like USER-PIWIK-VIEW-(.*) With this Piwik will handle the result of the regex - matching as domain and tries to give the user access to the domain.This two functions can not be combined!",
		"PrimaryAdapter": "Primary Adapter",
		"PrimaryAdapterDesc": "Primary Adapter is the the adapter which is chosen to prevail when data is both available on LDAP and Shibboleth, per default shibboleth is selected. This has only effect when LDAP is active.",
		"DeleteOldUser": "Delete the anauthorized users' access after login",
		"DeleteOldUserDesc": "This switch is used to clean the user table from not authorized user. If set the users that are not authorized, but exist in Piwik will have their access rights deleted after they login.",
		"ShibbolethSeparator": "Seprator for Shibboleth array values",
		"ShibbolethSeparatorDesc": "Shibboleth separator can be ; or , or etc.",
		"ShibbolethGroup": "Shibboleth Group Key",
		"ShibbolethGroupDesc": "Shibboleth group is the array key in $_SERVER which represents the user groups.",
		"ShibbolethAdminGroup": "Comma separated admin groups",
		"ShibbolethAdminGroupDesc": "To restrict access to Piwik back-end interface, this option can be used. There are two capabilities built into this option. First: The general administrator access of the User can be set with this group (USER-PIWIK-Admin), it gives another layer of security for user access management. Setting this option to a existing shibboleth group will result in users only within the group and super user to login. It will work if the restrict admin access is on. Second: Using a reg-ex pattern which contains parentheses like USER-PIWIK-ADMIN-(.*). With this Piwik will handle the result of the regex-matching as domain and tries to give the user access to the domain. This two functions can not be combined!",
		"ShibbolethSuperUserGroup": "Comma separated SuperUser groups",
		"ShibbolethSuperUserGroupDesc": "The Shibboleth SuperUser group will be matched andthe user can login afterwards. As SuperUser can manage everything (equivalent to root in Unix/Linux) this group's users should be chosen with care. There is no need to have siteId or domain set here and The string here will not be worked on to have a domain or siteId found.",
		"ShibbolethRestrictView": "Restrict View with Shibboleth",
		"ShibbolethRestrictViewDesc": "Using the first capabilities of the next option with this on, the view access will be restricted to the group set there. Use this only if you want another level of security.",
		"ShibbolethRestrictAdmin": "Restrict Admin with Shibboleth",
		"ShibbolethRestrictAdminDesc": "Using the first capabilities of the next option with this on, the admin access will be restricted to the group set there. Use this only if you want another level of security.",
		"LdapUserName": "Complete LDAP User (cn=....)",
		"LdapUserNameDesc": "LDAP username which will be used to bind to ldap server. It should have access to the attribute set afterwards so the login will work properly.",
		"LdapPassword": "LDAP Password",
		"LdapPasswordDesc": "LDAP Password (will be encrypted with SHA1)",
		"LdapHost": "LDAP Host Ip or Hostname",
		"LdapHostDesc": "For ldaps use ldaps:// and for ldap just the hostname.",
		"LdapPort": "LDAP Port if not set 636",
		"LdapPortDesc": "For LDAP normally 389, For Ldaps 636",
		"LdapDN": "LDAP Distinguished Names",
		"LdapDNDesc": "DN which contains the attributes for the given user.",
		"LdapUserAlias": "LDAP user alias (Fullname)",
		"LdapUserAliasDesc": "ldapUserAlias is the array key in LDAP result which represent the user's Full Name.",
		"LdapUserEmail": "LDAP user mail",
		"LdapUserEmailDesc": "ldapUserEmail is the key in LDAP result which represent the user's email.",
		"LdapActiveData": "The active options only will be searched.",
		"LdapActiveDataDesc": "Select the sources which should be search when ldap is active It allows the user to use LDAP partially, for one or two user types. At least one of them should be selected.",
		"LdapViewFilter": "Filter for view user",
		"LdapViewFilterDesc": "Filter string which should be used to filter LDAP queries for view. There is only one variable allowed in filter string which is denoted with ?. It is the username.",
		"LdapAdminFilter": "Filter for admin user",
		"LdapAdminFilterDesc": "Filter string which should be used to filter LDAP queries for admin. There is only one variable allowed in filter string which is denoted with ?. It is the username.",
		"LdapSuperUserFilter": "Filter for Super User",
		"LdapSuperUserFilterDesc": "Filter string which should be used to filter LDAP queries for Super User. There is only one variable allowed in filter string which is denoted with ?. It is the username.",
		"LdapViewAttr": "Attributes for view user, comma separated",
		"LdapViewAttrDesc": "The attributes which are needed, to decide if user has view access. They should be comma separated and no more than two. The first is the domain, the second is the path. If only one given it will be regarded as domain.",
		"LdapAdminAttr": "Attributes for admin user, comma separated",
		"LdapAdminAttrDesc": "The attributes which are needed, to decide if user has admin access. They should be comma separated and no more than two. The first is the domain, the second is the path. If only one given it will be regarded as domain.",
		"LdapSuperUserAttr": "Attribute for Super User",
		"LdapSuperUserAttrDesc": "The attribute which should be compared to the value set next.",
		"LdapSuperUserValue": "Value for the LDAP SuperUser attribute",
		"LdapSuperUserValueDesc": "The values for each SuperUser attributes must be set here. They should be in order as attributes it self.",
		"Nothing": "---",
		"LdapView": "View from LDAP",
		"LdapAdmin": "Admin from LDAP",
		"LdapSuperUser": "SuperUser from LDAP",
		"Shibboleth": "Shibboleth Service",
		"LDAP": "LDAP Service"
	}
}
